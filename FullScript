using UnityEngine;

public class ProjectileShooter : MonoBehaviour
{
    public GameObject projectilePrefab;
    public Transform firePoint;
    public float speed = 10.0f;
    public bool continuousFire = false;
    public float continuousFireRate = 5.0f;
    public float shotDelay = 0.5f;
    public string shootAnimationName = "Shoot";

    public GameObject[] muzzleFlashObjects;
    public float muzzleFlashDuration = 1.0f;

    [Header("Right mouse button settings")]
    public bool rightMouseEnabled = true;
    public float rightMouseSpeed = 15.0f;
    public bool rightMouseContinuousFire = false;
    public float rightMouseContinuousFireRate = 7.0f;
    public GameObject[] rightMouseMuzzleFlashObjects;
    public float rightMouseMuzzleFlashDuration = 1.5f;
    public Transform RmuzzleSpawn; // New field for right muzzle flash spawn point

    private float nextFireTime;
    private Animator animator;

    void Start()
    {
        animator = GetComponent<Animator>();
    }

    void Update()
    {
        if (continuousFire && Input.GetButton("Fire1") && Time.time >= nextFireTime)
        {
            Shoot(speed, muzzleFlashObjects, muzzleFlashDuration, firePoint); // Use default firePoint for left mouse
            nextFireTime = Time.time + 1.0f / continuousFireRate;
        }

        if (rightMouseEnabled && rightMouseContinuousFire && Input.GetButton("Fire2") && Time.time >= nextFireTime)
        {
            Shoot(rightMouseSpeed, rightMouseMuzzleFlashObjects, rightMouseMuzzleFlashDuration, RmuzzleSpawn); // Use RmuzzleSpawn for right mouse
            nextFireTime = Time.time + 1.0f / rightMouseContinuousFireRate;
        }
        else if (rightMouseEnabled && Input.GetButtonDown("Fire2") && Time.time >= nextFireTime)
        {
            Shoot(rightMouseSpeed, rightMouseMuzzleFlashObjects, rightMouseMuzzleFlashDuration, RmuzzleSpawn); // Use RmuzzleSpawn for right mouse
            nextFireTime = Time.time + shotDelay;
        }
    }

    void Shoot(float currentSpeed, GameObject[] currentMuzzleFlashObjects, float currentMuzzleFlashDuration, Transform muzzleSpawn)
    {
        if (animator != null)
        {
            animator.Play(shootAnimationName);
        }

        GameObject newProjectile = Instantiate(projectilePrefab, muzzleSpawn.position, muzzleSpawn.rotation);
        Rigidbody rb = newProjectile.GetComponent<Rigidbody>();

        if (rb != null)
        {
            rb.velocity = muzzleSpawn.forward * currentSpeed;
        }
        else
        {
            Debug.LogError("ProjectilePrefab must have a Rigidbody component.");
        }

        if (currentMuzzleFlashObjects.Length > 0)
        {
            int randomIndex = Random.Range(0, currentMuzzleFlashObjects.Length);
            GameObject muzzleFlash = Instantiate(currentMuzzleFlashObjects[randomIndex], muzzleSpawn.position, muzzleSpawn.rotation);

            Destroy(muzzleFlash, currentMuzzleFlashDuration);
        }
    }
}
